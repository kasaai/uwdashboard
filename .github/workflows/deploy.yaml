on:
  push:
    branches:
    - master
    paths:
    - 'app/**'
    - '.github/workflows/**'
  pull_request:
    branches:
    - master
    paths:
    - 'app/**'
    - '.github/workflows/**'

name: Deploy

jobs:
  deploy-prod:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
      - name: Download dependencies
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          install.packages(c("piggyback", "remotes", "pins", "gh"))
          remotes::install_github("rstudio/connectapi")
          piggyback::pb_download(file = "model_artifacts/toy-model.tar.gz", repo = "kasaai/cork")
          untar("model_artifacts/toy-model.tar.gz", exdir = "app")
          pins::board_register_github(name = "cork", repo = "kasaai/cork")
          testing_data <- pins::pin_get("toy-model-testing-data", board = "cork")
          saveRDS(testing_data, "app/testing_data.rds")
        shell: Rscript {0}
      - name: Deploy
        env:
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
          EVENT_NAME: ${{ github.event_name }}
          COMMIT: ${{ github.sha }}
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          client <- connectapi::connect(host = "https://colorado.rstudio.com/rsc",
                              api_key = Sys.getenv("CONNECT_API_KEY"))
          bundle <- connectapi::bundle_dir("app")
          is_pr <- Sys.getenv("EVENT_NAME") == "pull_request"
          app_name <- if (is_pr) paste0("uw_dashboard-", Sys.getenv("COMMIT")) else
            "Underwriting Dashboard"
          guid <- if (!is_pr) "ee35a016-31d2-4173-a16c-909d2a5fd581" else NULL
          content <- connectapi::deploy(client, bundle, name = app_name, guid = guid,
                                        access_type = "all")
          if (is_pr) {
            github_ref <- Sys.getenv("GITHUB_REF")
            msg <- paste0("App preview deployed to ", content$get_dashboard_url(), ".")
            issue_number <- gsub("refs/pull/|/merge", "", github_ref)
            gh::gh("POST /repos/:owner/:repo/issues/:issue_number/comments",
              owner = "kasaai", repo = "uwdashboard", 
              issue_number = issue_number,
              body = msg)
          }
        shell: Rscript {0}
